https://www.bluematador.com/learn/kubectl-cheatsheet

[root@e-centos8-master-01-rke2-0 ~]# kubectl get pods -n kube-system -o json|less
# Check which nodes are ready
k get nodes -o jsonpath='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}' | grep "Ready=True

{
            "apiVersion": "v1",
            "kind": "Pod",
            "metadata": {
                "annotations": {
                    "etcd.k3s.io/initial": "{\"initial-advertise-peer-urls\":\"https://192.168.50.146:2380\",\"initial-cluster\":\"e-centos8-master-01-rke2-0-d496c905=https://192.168.50.146:2380\",\"initial-cluster-state\":\"new\"}",
                    "kubernetes.io/config.hash": "129aa5bfa1ecf61181bb96a572df3ad4",
                    "kubernetes.io/config.mirror": "129aa5bfa1ecf61181bb96a572df3ad4",
                    "kubernetes.io/config.seen": "2022-09-01T12:02:46.917797982+10:00",
                    "kubernetes.io/config.source": "file",
                    "kubernetes.io/psp": "global-unrestricted-psp"
                },
                "creationTimestamp": "2022-09-01T02:03:31Z",
                "labels": {
                    "component": "etcd",
                    "tier": "control-plane"
                },
                "name": "etcd-e-centos8-master-01-rke2-0",
                "namespace": "kube-system",
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "controller": true,
                        "kind": "Node",
                        "name": "e-centos8-master-01-rke2-0",
                        "uid": "5e7c8712-0036-4a5e-90e0-b85fd77c8e1d"
                    }
                ],
                "resourceVersion": "1427538",
                "uid": "15877def-5693-491e-832c-fc82e639f310"
            },
            "status": {
                "conditions": [
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-09-11T02:21:22Z",
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-09-11T02:21:25Z",
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-09-11T02:21:25Z",
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "lastProbeTime": null,
                        "lastTransitionTime": "2022-09-11T02:21:22Z",
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "containerStatuses": [
                    {
                        "containerID": "containerd://0dca22188f49ac955379af9872d99d2f44a10634c26ad807646c7f7c9c2bbeda",
                        "image": "docker.io/rancher/rke2-cloud-provider:v0.0.1-build20210629",
                        "imageID": "docker.io/rancher/rke2-cloud-provider@sha256:6d44bc042375232930a22ff88875abe42bead7c10e0270234f19031162f3b93d",
                        "lastState": {
                            "terminated": {
                                "containerID": "containerd://8e5d1eaee177786a3d421bbe0f0938738b66e7272ee9cd722e185d89870a3d42",
                                "exitCode": 255,
                                "finishedAt": "2022-09-11T02:21:09Z",
                                "reason": "Unknown",
                                "startedAt": "2022-09-10T00:51:43Z"
                            }
                        },
                        "name": "cloud-controller-manager",
                        "ready": true,
                        "restartCount": 5,
                        "started": true,
                        "state": {
                            "running": {
                                "startedAt": "2022-09-11T02:21:23Z"
                            }
                        }
                    }


[root@e-centos8-master-01-rke2-0 ~]# kubectl get pods -n kube-system -o jsonpath='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'
cloud-controller-manager-e-centos8-master-01-rke2-0:Initialized=True;Ready=True;ContainersReady=True;PodScheduled=True;etcd-e-centos8-master-01-rke2-0:Initialized=True;Ready=True;ContainersReady=True;PodScheduled=True;helm-install-rke2-canal-nqlg4:Initialized=True;Ready=False;ContainersReady=False;PodScheduled=True;helm-install-rke2-coredns-pg2px:Initialized=True;Ready=False;ContainersReady=False;PodScheduled=True;helm-install-rke2-ingress-nginx-k7kfn:Initialized=True;Ready=False;ContainersReady=False;PodScheduled=True;helm-install-rke2-metrics-server-bmhz5:Initialized=True;Ready=False;ContainersReady=False;PodScheduled=True;kube-apiserver-e-centos8-master-01-rke2-0:Initialized=True;Ready=True;ContainersReady=True;PodScheduled=True;kube-controller-manager-e-centos8-master-01-rke2-0:Initialized=True;Ready=True;ContainersReady=True;PodScheduled=True;kube-proxy-e-centos8-master-01-rke2-0:Initialized=True;Ready=True;ContainersReady=True;PodScheduled=True;kube-scheduler-e-centos8-master-01-rke2-0:Initialized=True;Ready=True;ContainersReady=True;PodScheduled=True;rke2-canal-n8fsz:Initialized=True;Ready=True;ContainersReady=True;PodScheduled=True;rke2-coredns-rke2-coredns-5c84cbd6bd-kx8gw:Initialized=True;Ready=True;ContainersReady=True;PodScheduled=True;rke2-coredns-rke2-coredns-autoscaler-78bdc5d6c-s7qtp:Initialized=True;Ready=True;ContainersReady=True;PodScheduled=True;rke2-ingress-nginx-controller-cfn8z:Initialized=True;Ready=True;ContainersReady=True;PodScheduled=True;rke2-metrics-server-5df7d77b5b-ssj54:Initialized=True;Ready=True;ContainersReady=True;PodScheduled=True;[root@e-centos8-master-01-rke2-0 ~]#

[root@e-centos8-master-01-rke2-0 ~]# kubectl get pods -n kube-system -o jsonpath='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}' | xargs -d ';' -n1 echo
cloud-controller-manager-e-centos8-master-01-rke2-0:Initialized=True
Ready=True
ContainersReady=True
PodScheduled=True
etcd-e-centos8-master-01-rke2-0:Initialized=True
Ready=True
ContainersReady=True
PodScheduled=True
helm-install-rke2-canal-nqlg4:Initialized=True
Ready=False
ContainersReady=False
PodScheduled=True
helm-install-rke2-coredns-pg2px:Initialized=True
Ready=False
ContainersReady=False
PodScheduled=True
helm-install-rke2-ingress-nginx-k7kfn:Initialized=True
Ready=False
ContainersReady=False
PodScheduled=True
helm-install-rke2-metrics-server-bmhz5:Initialized=True
Ready=False
ContainersReady=False
PodScheduled=True
kube-apiserver-e-centos8-master-01-rke2-0:Initialized=True
Ready=True
ContainersReady=True
PodScheduled=True
kube-controller-manager-e-centos8-master-01-rke2-0:Initialized=True
Ready=True
ContainersReady=True
PodScheduled=True
kube-proxy-e-centos8-master-01-rke2-0:Initialized=True
Ready=True
ContainersReady=True
PodScheduled=True

kube-scheduler-e-centos8-master-01-rke2-0:Initialized=True
Ready=True
ContainersReady=True
PodScheduled=True

rke2-canal-n8fsz:Initialized=True
Ready=True
ContainersReady=True
PodScheduled=True

rke2-coredns-rke2-coredns-5c84cbd6bd-kx8gw:Initialized=True
Ready=True
ContainersReady=True
PodScheduled=True

rke2-coredns-rke2-coredns-autoscaler-78bdc5d6c-s7qtp:Initialized=True
Ready=True
ContainersReady=True
PodScheduled=True

rke2-ingress-nginx-controller-cfn8z:Initialized=True
Ready=True
ContainersReady=True
PodScheduled=True

rke2-metrics-server-5df7d77b5b-ssj54:Initialized=True
Ready=True
ContainersReady=True
PodScheduled=True
[root@e-centos8-master-01-rke2-0 ~]#


kubectl get pods -n kube-system -o jsonpath='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}' |grep Ready=True
kubectl get pods -n kube-system -o jsonpath='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}' |grep PodScheduled=True
kubectl get pods -n kube-system -o jsonpath='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}' |grep ContainersReady=True
kubectl get pods -n kube-system -o jsonpath='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}' |grep <name of metadata>

[root@e-centos8-master-01-rke2-0 ~]# kubectl get pods -n kube-system -o jsonpath='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]};{end}' | xargs -d ';' -n4 echo
cloud-controller-manager-e-centos8-master-01-rke2-0:
etcd-e-centos8-master-01-rke2-0:
helm-install-rke2-canal-nqlg4:
helm-install-rke2-coredns-pg2px:
helm-install-rke2-ingress-nginx-k7kfn:
helm-install-rke2-metrics-server-bmhz5:
kube-apiserver-e-centos8-master-01-rke2-0:
kube-controller-manager-e-centos8-master-01-rke2-0:
kube-proxy-e-centos8-master-01-rke2-0:
kube-scheduler-e-centos8-master-01-rke2-0:
rke2-canal-n8fsz:
rke2-coredns-rke2-coredns-5c84cbd6bd-kx8gw:
rke2-coredns-rke2-coredns-autoscaler-78bdc5d6c-s7qtp:
rke2-ingress-nginx-controller-cfn8z:
rke2-metrics-server-5df7d77b5b-ssj54:


[root@e-centos8-master-01-rke2-0 ~]# kubectl get pods -n kube-system -o jsonpath='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}' | xargs -d ';' -n4 echo
cloud-controller-manager-e-centos8-master-01-rke2-0:Initialized=True Ready=True ContainersReady=True PodScheduled=True
etcd-e-centos8-master-01-rke2-0:Initialized=True Ready=True ContainersReady=True PodScheduled=True
helm-install-rke2-canal-nqlg4:Initialized=True Ready=False ContainersReady=False PodScheduled=True
helm-install-rke2-coredns-pg2px:Initialized=True Ready=False ContainersReady=False PodScheduled=True
helm-install-rke2-ingress-nginx-k7kfn:Initialized=True Ready=False ContainersReady=False PodScheduled=True
helm-install-rke2-metrics-server-bmhz5:Initialized=True Ready=False ContainersReady=False PodScheduled=True
kube-apiserver-e-centos8-master-01-rke2-0:Initialized=True Ready=True ContainersReady=True PodScheduled=True
kube-controller-manager-e-centos8-master-01-rke2-0:Initialized=True Ready=True ContainersReady=True PodScheduled=True
kube-proxy-e-centos8-master-01-rke2-0:Initialized=True Ready=True ContainersReady=True PodScheduled=True
kube-scheduler-e-centos8-master-01-rke2-0:Initialized=True Ready=True ContainersReady=True PodScheduled=True
rke2-canal-n8fsz:Initialized=True Ready=True ContainersReady=True PodScheduled=True
rke2-coredns-rke2-coredns-5c84cbd6bd-kx8gw:Initialized=True Ready=True ContainersReady=True PodScheduled=True
rke2-coredns-rke2-coredns-autoscaler-78bdc5d6c-s7qtp:Initialized=True Ready=True ContainersReady=True PodScheduled=True
rke2-ingress-nginx-controller-cfn8z:Initialized=True Ready=True ContainersReady=True PodScheduled=True
rke2-metrics-server-5df7d77b5b-ssj54:Initialized=True Ready=True ContainersReady=True PodScheduled=True



----
[root@e-centos8-master-01-rke2-0 ~]# k get secret anchore-enterprise-license -n anchore-enterprise -o json |less

get secret:
{
    "apiVersion": "v1",
    "data": {
        "license.yaml": "ZGV0YWlsczoKCiAgLSB2ZXJzaW9uOiAnMS4wJwoKICAtIHByb2R1Y3Q6CgogICAgICAtIG5hbWU6IEFuY2hvcmUgRW50ZXJwcmlzZQoKICAgICAgLSBkZXNjcmlwdGlvbjogQW5jaG9yZSBFbnRlcnByaXNlIE1hbmFnZXIKCiAgICAgIC0gdHlwZTogZW50ZXJwcmlzZQoKICAtIGxpY2Vuc2U6CgogICAgICAtIHVzZXI6IE1hcnlBbm5lIEplbmtpbnMKCiAgICAgIC0gb3JnYW5pemF0aW9uOiBMZWlkb3MKCiAgICAgIC0gZW1haWw6IG1hcnlhbm5lLmplbmtpbnNAZGVmZW5jZS5nb3YuYXUKCiAgICAgIC0gaWQ6IDI3MDkzOTlmLWZkZGUtNGY5My05NWQ0LWJhZDFlN2EyYzhiOQoKICAgICAgLSBjcmVhdGlvbjogJzIwMjEtMTItMjBUMjE6MzU6NTYuMTcwWicKCiAgICAgIC0gZXhwaXJhdGlvbjogJzIwMjQtMTItMTlUMjE6MzY6MjguNzE1WicKCiAgICAgIC0gd2FybmluZzogJzIwMjItMTEtMjBUMjE6MzU6NTYuMTcwWicKCiAgICAgIC0gdXJsOiAnaHR0cHM6Ly93d3cuYW5jaG9yZS5jb20nCgogIC0gc3VwcG9ydDoKCiAgICAgIC0gY29udGFjdDogJ0FuY2hvcmUsIEluYy4nCgogICAgICAtIG51bWJlcjogKzEgODA1LTM2OS0xNzk1CgogICAgICAtIGVtYWlsOiBzdXBwb3J0QGFuY2hvcmUuY29tCgogICAgICAtIHVybDogJ2h0dHBzOi8vd3d3LmFuY2hvcmUuY29tL3N1cHBvcnQnCgpzaWduYXR1cmU6ID4tCgogIGI1NmE5MmJkOGZiZjE4Y2Q3YzEyNmVkMTI5ODkwZDMzZTJjZGQxMmIzZWRiODljMjAxOTI2M2YzMzk1NDllNmQyZTJkZWZhNGQxYTY0M2JhZWE2ODM1N2ZmODI0NjJiYTNhODA0YWQ2OWJiMzcxZDQ3MTkwMWRjZDA0NzczYTUxY2Q4ZmFiYTg3ZmQxNzIwMmIzYjk1MmEyMDg4MDQ2Mjk1NWQ4YmVjMDZmOTU3ODk1M2MwMjM0ZWZlYjViYjJiMWU1NWZiYWY0YTAwMWJkYjk0YzgzMjRkNjI2ODFiYWFjMjZlZjQ4YjEzZTU1ZWE1NTZiY2EzNjFmNTQ5YzBkYTA2NzU0OWE0M2FhMjFjNDYyZDRjZmI1ZmQyMzljNzM0Yzk3OWZkN2U1YWYwOWNlNjI5MjQyN2E3YTdjNDVlYWE1MzM1ZDE1OTJjMjY2YmM4MmRlNjZhMjBjMjQxZGU2N2QwNmFkZTc4MmE4NDJiZmNiNzRlODZjZTYyOTZhMWRhMGQ4OTdkMjJiZjgyNDM0ZTU1ZDk0YTVmNTY4NmNlMzM1YzkwMDFlZWEwZGZiNDZhYWExNDViYmVjNWExZTI0YWU4ZmJmMTNlYTQ1M2NhM2U2NTNmZDVkZDhkYzFhZGNmOTFhOWUxY2Q3YzFhYTFiNmU0MTYzNjk1ZjAwMGFjZDQ2NDQ0NDYzNDI1N2Q2Njk5NjVkZGI1MGRlOGE5MmFlMTQ5NWJjMDVkMmUyZmZhMDdjODhhYWM4MTkyMmYzMzg1NGU5NzQzYmFhYjdjOTU3YjAyOWQ5NjNmZmVhODI4NzVlNjIyMDY3YTJhZTJlNzIwYTg3OGM1ZGQzODMxOWNhMDRmMjVlYmU4YTE4MTliMjliYWVjMjdhMzBjZDJkYzFjOTVlNmIxZGZmYjg1NDhlY2VmNzgxNTBmMjEzZWFiOWUwYTBiNzBhNmRmOGIzMTVlNTEyMDZkMDdmZDQyNTdiNTVlMDNkYmQ4OGQxNDVhN2ZhMTA3MGY1N2UwZTQ0NWYxYjhkNjYwOGNlNzI3MTEyNzE5OWQ4OTA1NTJiZDJiY2RjMWI2NDViNjEyYmJmMDQ4NmE1ODU3MWU2OWMzYTU3M2I1ZWIyNzgyYzZlYmVmYWQ1NWRiODEyZDRjMWQzN2IyZjBhYTE0NzQyNmY2OWYwZTNjZjQ1MmU5YjgxMDE3YmRiYjEwYjdlNzhjMzExN2JmYWNlYmIxOTdkYTQ1M2Y3NzUxMjlhMGQ4ZGNkZTdiYTRiNjE2NDY5ODE4OTdiZTNmMzFhYTgzMWU3MTNhMDk0ZTE2OTdiYzk4NGQyODI0NGEzY2ZiODA4M2NlOTdiN2I2Nzc5ZWJjNDExZmMwZWFmYmI="
    },
    "kind": "Secret",
    "metadata": {
        "creationTimestamp": "2021-11-22T08:22:00Z",
        "name": "anchore-enterprise-license",
        "namespace": "anchore-enterprise",
        "resourceVersion": "947515",
        "uid": "0a646bec-4cee-43b6-bdab-286163bf706a"
    },
    "type": "Opaque"
}


[root@e-centos8-master-01-rke2-0 ~]# kubectl get secret anchore-enterprise-license -n anchore-enterprise -o go-template='{{range $k,$v := .data}}{{"### "}}{{$k}}{{"\n"}}{{$v|base64decode}}{{"\n\n"}}{{end}}'
### license.yaml
details:

  - version: '1.0'

  - product:

      - name: Anchore Enterprise

      - description: Anchore Enterprise Manager

      - type: enterprise

  - license:

      - user: MaryAnne Jenkins

      - organization: Leidos

      - email: maryanne.jenkins@defence.gov.au

      - id: 2709399f-fdde-4f93-95d4-bad1e7a2c8b9

      - creation: '2021-12-20T21:35:56.170Z'

      - expiration: '2024-12-19T21:36:28.715Z'

      - warning: '2022-11-20T21:35:56.170Z'

      - url: 'https://www.anchore.com'

  - support:

      - contact: 'Anchore, Inc.'

      - number: +1 805-369-1795

      - email: support@anchore.com

      - url: 'https://www.anchore.com/support'

signature: >-

  b56a92bd8fbf18cd7c126ed129890d33e2cdd12b3edb89c2019263f339549e6d2e2defa4d1a643baea68357ff82462ba3a804ad69bb371d471901dcd04773a51cd8faba87fd17202b3b952a20880462955d8bec06f9578953c0234efeb5bb2b1e55fbaf4a001bdb94c8324d62681baac26ef48b13e55ea556bca361f549c0da067549a43aa21c462d4cfb5fd239c734c979fd7e5af09ce6292427a7a7c45eaa5335d1592c266bc82de66a20c241de67d06ade782a842bfcb74e86ce6296a1da0d897d22bf82434e55d94a5f5686ce335c9001eea0dfb46aaa145bbec5a1e24ae8fbf13ea453ca3e653fd5dd8dc1adcf91a9e1cd7c1aa1b6e4163695f000acd464444634257d669965ddb50de8a92ae1495bc05d2e2ffa07c88aac81922f33854e9743baab7c957b029d963ffea82875e622067a2ae2e720a878c5dd38319ca04f25ebe8a1819b29baec27a30cd2dc1c95e6b1dffb8548ecef78150f213eab9e0a0b70a6df8b315e51206d07fd4257b55e03dbd88d145a7fa1070f57e0e445f1b8d6608ce7271127199d890552bd2bcdc1b645b612bbf0486a58571e69c3a573b5eb2782c6ebefad55db812d4c1d37b2f0aa147426f69f0e3cf452e9b81017bdbb10b7e78c3117bfacebb197da453f775129a0d8dcde7ba4b61646981897be3f31aa831e713a094e1697bc984d28244a3cfb8083ce97b7b6779ebc411fc0eafbb


# List all Secrets currently in use by a pod
kubectl get pods -o json | jq '.items[].spec.containers[].env[]?.valueFrom.secretKeyRef.name' | grep -v null | sort | uniq

# List all containerIDs of initContainer of all pods
# Helpful when cleaning up stopped containers, while avoiding removal of initContainers.
kubectl get pods --all-namespaces -o jsonpath='{range .items[*].status.initContainerStatuses[*]}{.containerID}{"\n"}{end}' | cut -d/ -f3

# Check which nodes are ready
JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}' \
 && kubectl get nodes -o jsonpath="$JSONPATH" | grep "Ready=True"
 
# Retrieve the value of a key with dots, e.g. 'ca.crt'
kubectl get configmap myconfig \
-o jsonpath='{.data.ca\.crt}'

[root@e-centos8-master-01-rke2-0 ~]# kubectl get configmap -n trident-system
NAME               DATA   AGE
kube-root-ca.crt   1      5d3h
[root@e-centos8-master-01-rke2-0 ~]# kubectl get configmap kube-root-ca.crt -o jsonpath='{.data.ca\.crt}'
-----BEGIN CERTIFICATE-----
MIIBejCCAR+gAwIBAgIBADAKBggqhkjOPQQDAjAkMSIwIAYDVQQDDBlya2UyLXNl
cnZlci1jYUAxNjM2ODk1NTYyMB4XDTIxMTExNDEzMTI0MloXDTMxMTExMjEzMTI0
MlowJDEiMCAGA1UEAwwZcmtlMi1zZXJ2ZXItY2FAMTYzNjg5NTU2MjBZMBMGByqG
SM49AgEGCCqGSM49AwEHA0IABBCic0yzJBAP5tW0IMKDqsYRllVGid0a6QtBydjQ
tZVsZTevv6O0UmhSL9Z8OtJ1QWVj+GUz2Elm/FYfer3mBvujQjBAMA4GA1UdDwEB
/wQEAwICpDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBQ8KKHCbh8ioAenwX/v
Jt8FrjM3hjAKBggqhkjOPQQDAgNJADBGAiEAgC5lAsoYeyZsTIKb0ud4EQ6bcOIK
GrKiHDL2i9aGErICIQCCQLUij/47vZXIK3MUmdcI0rvUeUFtAPFilrsowJUMPw==
-----END CERTIFICATE-----


# Get the version label of all pods with label app=cassandra
kubectl get pods --selector=app=cassandra -o \
  jsonpath='{.items[*].metadata.labels.version}'
  
# List Events sorted by timestamp
kubectl get events --sort-by=.metadata.creationTimestamp

# Compares the current state of the cluster against the state that the cluster would be in if the manifest was applied.
kubectl diff -f ./my-manifest.yaml
helm get manifest trident-operator -n trident-system |k diff -f -

# Produce a period-delimited tree of all keys returned for nodes
# Helpful when locating a key within a complex nested JSON structure
kubectl get nodes -o json | jq -c 'paths|join(".")'

# Produce a period-delimited tree of all keys returned for pods, etc
kubectl get pods -o json | jq -c 'paths|join(".")'

# Get a deployment's status subresource
kubectl get deployment nginx-deployment --subresource=status

# Produce ENV for all pods, assuming you have a default container for the pods, default namespace and the `env` command is supported.
# Helpful when running any supported command across all pods, not just `env`
for pod in $(kubectl get po --output=jsonpath={.items..metadata.name}); do echo $pod && kubectl exec -it $pod -- env; done

[root@e-centos8-master-01-rke2-0 ~]# for pod in $(kubectl get po --output=jsonpath={.items..metadata.name}); do echo $pod && kubectl exec -it $pod -- env; done
pvpod2
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOSTNAME=pvpod2
KUBERNETES_SERVICE_PORT_HTTPS=443
KUBERNETES_PORT=tcp://10.43.0.1:443
KUBERNETES_PORT_443_TCP=tcp://10.43.0.1:443
KUBERNETES_PORT_443_TCP_PROTO=tcp
KUBERNETES_PORT_443_TCP_PORT=443
KUBERNETES_PORT_443_TCP_ADDR=10.43.0.1
KUBERNETES_SERVICE_HOST=10.43.0.1
KUBERNETES_SERVICE_PORT=443
TERM=xterm
HOME=/root

[root@e-centos8-master-01-rke2-0 ~]# kubectl get pod -A -o json |grep KUBERNETES
                                "name": "KUBERNETES_SERVICE_HOST",
                                "name": "KUBERNETES_SERVICE_PORT",
                                "name": "KUBERNETES_SERVICE_HOST",
                                "name": "KUBERNETES_SERVICE_PORT",
                                "name": "KUBERNETES_NODE_NAME",
                                "name": "KUBERNETES_NODE_IP",


[root@e-centos8-master-01-rke2-0 ~]# k exec -it pvpod2 -- env
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOSTNAME=pvpod2
KUBERNETES_SERVICE_PORT_HTTPS=443
KUBERNETES_PORT=tcp://10.43.0.1:443
KUBERNETES_PORT_443_TCP=tcp://10.43.0.1:443
KUBERNETES_PORT_443_TCP_PROTO=tcp
KUBERNETES_PORT_443_TCP_PORT=443
KUBERNETES_PORT_443_TCP_ADDR=10.43.0.1
KUBERNETES_SERVICE_HOST=10.43.0.1
KUBERNETES_SERVICE_PORT=443
TERM=xterm
HOME=/root


[root@e-centos8-master-01-rke2-0 ~]# for pod in $(kubectl get po -A --output=jsonpath={.items..metadata.name}); do echo $pod ; done
anchore-engine-anchore-engine-analyzer-5df7858765-qlsqz
anchore-engine-anchore-engine-api-79dd8c98f6-m98l9
anchore-engine-anchore-engine-catalog-79bff44fb4-cszlx
anchore-engine-anchore-engine-enterprise-feeds-8487867dbd-k6nns
anchore-engine-anchore-engine-enterprise-ui-888bfd8f5-p9ftt
anchore-engine-anchore-engine-policy-6fcc7946db-vgc8f
anchore-engine-anchore-engine-simplequeue-7b6db49885-46hbx
anchore-engine-anchore-feeds-db-549df59c5b-t5vjl
anchore-engine-anchore-ui-redis-master-0
anchore-engine-postgresql-57b44c5bbb-x52nr
fleet-agent-6f5c7cfdbc-gszp5
cattle-cluster-agent-677ff77b5-nbqvq
pvpod2
cloud-controller-manager-e-centos8-master-01-rke2-0
etcd-e-centos8-master-01-rke2-0
helm-install-rke2-canal-nqlg4
helm-install-rke2-coredns-pg2px
helm-install-rke2-ingress-nginx-k7kfn
helm-install-rke2-metrics-server-bmhz5
kube-apiserver-e-centos8-master-01-rke2-0
kube-controller-manager-e-centos8-master-01-rke2-0
kube-proxy-e-centos8-master-01-rke2-0
kube-scheduler-e-centos8-master-01-rke2-0
rke2-canal-n8fsz
rke2-coredns-rke2-coredns-5c84cbd6bd-kx8gw
rke2-coredns-rke2-coredns-autoscaler-78bdc5d6c-s7qtp
rke2-ingress-nginx-controller-cfn8z
rke2-metrics-server-5df7d77b5b-ssj54
nfs-client-provisioner-65c66d7ccb-n5dkw
splunk-connect-splunk-kubernetes-logging-9qvh9
splunk-connect-splunk-kubernetes-metrics-agg-85d855b799-ddxhr
splunk-connect-splunk-kubernetes-metrics-vpspz
splunk-connect-splunk-kubernetes-objects-7c498fb7d-5t49q
trident-csi-6c9fc4766d-hwgvh
trident-csi-9w9z6
trident-operator-6598486bf7-w82m5

#show namespace
[root@e-centos8-master-01-rke2-0 ~]# for pod in $(kubectl get po -n splunk --output=jsonpath={.items..metadata.name}); do echo $pod && kubectl exec -it $pod -n splunk -- env; done
splunk-connect-splunk-kubernetes-logging-9qvh9
PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOSTNAME=splunk-connect-splunk-kubernetes-logging-9qvh9
container=oci
SUMMARY=Platform for building and running Ruby 2.7 applications
DESCRIPTION=Ruby 2.7 available as container is a base platform for building and running various Ruby 2.7 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.
STI_SCRIPTS_URL=image:///usr/libexec/s2i
STI_SCRIPTS_PATH=/usr/libexec/s2i
APP_ROOT=/opt/app-root
HOME=/opt/app-root/src
PLATFORM=el8
NODEJS_VER=14
RUBY_MAJOR_VERSION=2
RUBY_MINOR_VERSION=7
RUBY_VERSION=2.7
RUBY_SCL_NAME_VERSION=27
RUBY_SCL=ruby-27
IMAGE_NAME=ubi8/ruby-27
VERSION=1.2.8
FLUENT_USER=fluent
K8S_NODE_NAME=e-centos8-master-01-rke2-0
MY_NAMESPACE=splunk
MY_POD_NAME=splunk-connect-splunk-kubernetes-logging-9qvh9
SPLUNK_HEC_TOKEN=4080d264-0cd6-4bbd-8ef6-3f19f8ee5e9f
SSL_CERT_FILE=/fluentd/etc/splunk/hec_ca_file
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_SERVICE_PORT_HTTP_METRICS=24231
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP=tcp://10.43.210.4:24231
KUBERNETES_PORT=tcp://10.43.0.1:443
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP_PROTO=tcp
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP_PORT=24231
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP_ADDR=10.43.210.4
KUBERNETES_SERVICE_PORT=443
KUBERNETES_SERVICE_PORT_HTTPS=443
KUBERNETES_PORT_443_TCP_PORT=443
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_SERVICE_HOST=10.43.210.4
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_SERVICE_PORT=24231
KUBERNETES_PORT_443_TCP=tcp://10.43.0.1:443
KUBERNETES_PORT_443_TCP_PROTO=tcp
KUBERNETES_PORT_443_TCP_ADDR=10.43.0.1
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT=tcp://10.43.210.4:24231
KUBERNETES_SERVICE_HOST=10.43.0.1
TERM=xterm
splunk-connect-splunk-kubernetes-metrics-agg-85d855b799-ddxhr
PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOSTNAME=splunk-connect-splunk-kubernetes-metrics-agg-85d855b799-ddxhr
container=oci
SUMMARY=Platform for building and running Ruby 2.7 applications
DESCRIPTION=Ruby 2.7 available as container is a base platform for building and running various Ruby 2.7 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.
STI_SCRIPTS_URL=image:///usr/libexec/s2i
STI_SCRIPTS_PATH=/usr/libexec/s2i
APP_ROOT=/opt/app-root
HOME=/opt/app-root/src
PLATFORM=el8
NODEJS_VER=14
RUBY_MAJOR_VERSION=2
RUBY_MINOR_VERSION=7
RUBY_VERSION=2.7
RUBY_SCL_NAME_VERSION=27
RUBY_SCL=ruby-27
IMAGE_NAME=ubi8/ruby-27
VERSION=1.1.7
FLUENT_USER=fluent
SSL_CERT_FILE=/fluentd/etc/splunk/hec_ca_file
SPLUNK_HEC_TOKEN=088454c7-6653-4a6d-bcfe-a102baecab6c
NODE_NAME=e-centos8-master-01-rke2-0
MY_NAMESPACE=splunk
MY_POD_NAME=splunk-connect-splunk-kubernetes-metrics-agg-85d855b799-ddxhr
KUBERNETES_SERVICE_PORT_HTTPS=443
KUBERNETES_PORT_443_TCP=tcp://10.43.0.1:443
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_SERVICE_PORT=24231
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_SERVICE_PORT_HTTP_METRICS=24231
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP=tcp://10.43.210.4:24231
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP_PROTO=tcp
KUBERNETES_SERVICE_HOST=10.43.0.1
KUBERNETES_SERVICE_PORT=443
KUBERNETES_PORT_443_TCP_ADDR=10.43.0.1
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_SERVICE_HOST=10.43.210.4
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP_ADDR=10.43.210.4
KUBERNETES_PORT=tcp://10.43.0.1:443
KUBERNETES_PORT_443_TCP_PROTO=tcp
KUBERNETES_PORT_443_TCP_PORT=443
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT=tcp://10.43.210.4:24231
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP_PORT=24231
TERM=xterm
splunk-connect-splunk-kubernetes-metrics-vpspz
PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOSTNAME=splunk-connect-splunk-kubernetes-metrics-vpspz
container=oci
SUMMARY=Platform for building and running Ruby 2.7 applications
DESCRIPTION=Ruby 2.7 available as container is a base platform for building and running various Ruby 2.7 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.
STI_SCRIPTS_URL=image:///usr/libexec/s2i
STI_SCRIPTS_PATH=/usr/libexec/s2i
APP_ROOT=/opt/app-root
HOME=/opt/app-root/src
PLATFORM=el8
NODEJS_VER=14
RUBY_MAJOR_VERSION=2
RUBY_MINOR_VERSION=7
RUBY_VERSION=2.7
RUBY_SCL_NAME_VERSION=27
RUBY_SCL=ruby-27
IMAGE_NAME=ubi8/ruby-27
VERSION=1.1.7
FLUENT_USER=fluent
SSL_CERT_FILE=/fluentd/etc/splunk/hec_ca_file
KUBERNETES_NODE_IP=192.168.50.146
NODE_NAME=e-centos8-master-01-rke2-0
MY_NAMESPACE=splunk
MY_POD_NAME=splunk-connect-splunk-kubernetes-metrics-vpspz
SPLUNK_HEC_TOKEN=088454c7-6653-4a6d-bcfe-a102baecab6c
KUBERNETES_SERVICE_HOST=10.43.0.1
KUBERNETES_SERVICE_PORT=443
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_SERVICE_PORT_HTTP_METRICS=24231
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP=tcp://10.43.210.4:24231
KUBERNETES_PORT=tcp://10.43.0.1:443
KUBERNETES_PORT_443_TCP=tcp://10.43.0.1:443
KUBERNETES_PORT_443_TCP_PROTO=tcp
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_SERVICE_PORT=24231
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP_PORT=24231
KUBERNETES_SERVICE_PORT_HTTPS=443
KUBERNETES_PORT_443_TCP_PORT=443
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_SERVICE_HOST=10.43.210.4
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT=tcp://10.43.210.4:24231
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP_ADDR=10.43.210.4
KUBERNETES_PORT_443_TCP_ADDR=10.43.0.1
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP_PROTO=tcp
TERM=xterm
splunk-connect-splunk-kubernetes-objects-7c498fb7d-5t49q
PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
HOSTNAME=splunk-connect-splunk-kubernetes-objects-7c498fb7d-5t49q
container=oci
SUMMARY=Platform for building and running Ruby 2.7 applications
DESCRIPTION=Ruby 2.7 available as container is a base platform for building and running various Ruby 2.7 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.
STI_SCRIPTS_URL=image:///usr/libexec/s2i
STI_SCRIPTS_PATH=/usr/libexec/s2i
APP_ROOT=/opt/app-root
HOME=/opt/app-root/src
PLATFORM=el8
NODEJS_VER=14
RUBY_MAJOR_VERSION=2
RUBY_MINOR_VERSION=7
RUBY_VERSION=2.7
RUBY_SCL_NAME_VERSION=27
RUBY_SCL=ruby-27
IMAGE_NAME=ubi8/ruby-27
VERSION=1.1.8
FLUENT_USER=fluent
MY_NAMESPACE=splunk
MY_POD_NAME=splunk-connect-splunk-kubernetes-objects-7c498fb7d-5t49q
NODE_NAME=e-centos8-master-01-rke2-0
SPLUNK_HEC_TOKEN=7c250765-d237-4d92-8b44-f58b619aa790
SSL_CERT_FILE=/fluentd/etc/splunk/hec_ca_file
KUBERNETES_SERVICE_PORT_HTTPS=443
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_SERVICE_PORT_HTTP_METRICS=24231
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP_PROTO=tcp
KUBERNETES_PORT_443_TCP=tcp://10.43.0.1:443
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT=tcp://10.43.210.4:24231
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP_ADDR=10.43.210.4
KUBERNETES_SERVICE_HOST=10.43.0.1
KUBERNETES_PORT_443_TCP_ADDR=10.43.0.1
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP_PORT=24231
KUBERNETES_SERVICE_PORT=443
KUBERNETES_PORT=tcp://10.43.0.1:443
KUBERNETES_PORT_443_TCP_PROTO=tcp
KUBERNETES_PORT_443_TCP_PORT=443
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_SERVICE_HOST=10.43.210.4
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_SERVICE_PORT=24231
SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP=tcp://10.43.210.4:24231
TERM=xterm


[root@e-centos8-master-01-rke2-0 ~]# for pod in $(kubectl get po -n splunk --output=jsonpath={.items..metadata.name}); do echo $pod && kubectl exec -it $pod -n splunk -- env; done | xargs -d '\n' -n3 echo
 HOSTNAME=splunk-connect-splunk-kubernetes-logging-9qvh9/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
 DESCRIPTION=Ruby 2.7 available as container is a base platform for building and running various Ruby 2.7 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.
 APP_ROOT=/opt/app-rootlibexec/s2iec/s2i
 NODEJS_VER=14root/src
 RUBY_VERSION=2.7ON=7
 IMAGE_NAME=ubi8/ruby-27
 K8S_NODE_NAME=e-centos8-master-01-rke2-0
 SPLUNK_HEC_TOKEN=4080d264-0cd6-4bbd-8ef6-3f19f8ee5e9f9qvh9
 SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP=tcp://10.43.210.4:24231
 SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP_PORT=24231
 KUBERNETES_SERVICE_PORT_HTTPS=443OGGING_HEADLESS_PORT_24231_TCP_ADDR=10.43.210.4
 SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_SERVICE_PORT=24231.210.4
 KUBERNETES_PORT_443_TCP_ADDR=10.43.0.1:443
 TERM=xterm_SERVICE_HOST=10.43.0.1OGGING_HEADLESS_PORT=tcp://10.43.210.4:24231
 HOSTNAME=splunk-connect-splunk-kubernetes-metrics-agg-85d855b799-ddxhr/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
 DESCRIPTION=Ruby 2.7 available as container is a base platform for building and running various Ruby 2.7 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.
 APP_ROOT=/opt/app-rootlibexec/s2iec/s2i
 NODEJS_VER=14root/src
 RUBY_VERSION=2.7ON=7
 IMAGE_NAME=ubi8/ruby-27
 SSL_CERT_FILE=/fluentd/etc/splunk/hec_ca_file
 MY_NAMESPACE=splunk-master-01-rke2-0cfe-a102baecab6c
 KUBERNETES_PORT_443_TCP=tcp://10.43.0.1:443-metrics-agg-85d855b799-ddxhr
 SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP=tcp://10.43.210.4:24231
 KUBERNETES_SERVICE_PORT=44343.0.1OGGING_HEADLESS_PORT_24231_TCP_PROTO=tcp
 SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP_ADDR=10.43.210.4
 KUBERNETES_PORT_443_TCP_PORT=443p3
 TERM=xtermNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP_PORT=2423131
 HOSTNAME=splunk-connect-splunk-kubernetes-metrics-vpspz/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
 DESCRIPTION=Ruby 2.7 available as container is a base platform for building and running various Ruby 2.7 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensible.
 APP_ROOT=/opt/app-rootlibexec/s2iec/s2i
 NODEJS_VER=14root/src
 RUBY_VERSION=2.7ON=7
 IMAGE_NAME=ubi8/ruby-27
 SSL_CERT_FILE=/fluentd/etc/splunk/hec_ca_file
 MY_NAMESPACE=splunk-master-01-rke2-0
 KUBERNETES_SERVICE_HOST=10.43.0.16d-bcfe-a102baecab6cpspz
 SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP=tcp://10.43.210.4:24231
 KUBERNETES_PORT_443_TCP_PROTO=tcp43.0.1:443
 KUBERNETES_SERVICE_PORT_HTTPS=443LOGGING_HEADLESS_PORT_24231_TCP_PORT=24231
 SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT=tcp://10.43.210.4:24231
 SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP_PROTO=tcp.210.4
 splunk-connect-splunk-kubernetes-objects-7c498fb7d-5t49q PATH=/opt/app-root/src/bin:/opt/app-root/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
 SUMMARY=Platform for building and running Ruby 2.7 applicationsq
DESCRIPTION=Ruby 2.7 available as container is a base platform for building and running various Ruby 2.7 applications and frameworks. Ruby is the interpreted scripting language for quick and easy object-oriented programming. It has many features to process text files and to do system management tasks (as in Perl). It is simple, straight-forward, and extensibl STI_SCRIPTS_PATH=/usr/libexec/s2ixec/s2i
 PLATFORM=el8p-root/src
 RUBY_MINOR_VERSION=7
 RUBY_SCL=ruby-27RSION=27
 FLUENT_USER=fluenty-27
 NODE_NAME=e-centos8-master-01-rke2-0bernetes-objects-7c498fb7d-5t49q
 KUBERNETES_SERVICE_PORT_HTTPS=443/hec_ca_file19aa790
 KUBERNETES_PORT_443_TCP=tcp://10.43.0.1:443ADLESS_PORT_24231_TCP_PROTO=tcp=24231
 KUBERNETES_SERVICE_HOST=10.43.0.1LOGGING_HEADLESS_PORT_24231_TCP_ADDR=10.43.210.4
 KUBERNETES_SERVICE_PORT=443NETES_LOGGING_HEADLESS_PORT_24231_TCP_PORT=24231
 KUBERNETES_PORT_443_TCP_PORT=443p3
 SPLUNK_CONNECT_SPLUNK_KUBERNETES_LOGGING_HEADLESS_PORT_24231_TCP=tcp://10.43.210.4:24231
TERM=xterm
[root@e-centos8-master-01-rke2-0 ~]#

# Replace a pod based on the JSON passed into stdin
cat pod.json | kubectl replace -f -  

kubectl delete -f ./pod.json                                      # Delete a pod using the type and name specified in pod.json
kubectl create -f ./newpod.json
